(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{353:function(t,s,a){"use strict";a.r(s);var e=a(42),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"一-git-创建分支"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一-git-创建分支"}},[t._v("#")]),t._v(" 一 git 创建分支")]),t._v(" "),a("h3",{attrs:{id:"_1-本地分支"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-本地分支"}},[t._v("#")]),t._v(" 1.本地分支")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("$ git checkout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("b dev\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// git checkout命令加上-b参数表示创建并切换，相当于以下两条命令：")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// $ git branch dev")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// $ git checkout dev")]),t._v("\n\n$ git branch\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 用git branch命令查看当前分支：")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// * dev")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   master")]),t._v("\n\n$ git add Readme"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("txt\n$ git commit "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("m "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"branch dev test"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 添加文件 "Readme.txt", 提交到本地dev分支')]),t._v("\n\n$ git checkout master\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// dev分支的工作完成，切换回master分支：")]),t._v("\n\n\n$ git merge dev\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 把dev分支的工作内容合并到master分支上：")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// git merge命令用于合并指定分支到当前分支。合并后，再查看Readme.txt的内容，和dev分支的最新提交是完全一致的。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Fast-forward信息代表：“快进模式”，直接把master指向dev的当前提交，合并速度快。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 并非每次代码合并都能实现Fast-forward。")]),t._v("\n\n$ git branch "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("d dev\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 合并完成后，删除dev分支,删除后，查看branch，就只有master分支了")]),t._v("\n\n$ git branch\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" master\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建、合并和删除分支非常快，鼓励你使用分支来完成某个短期任务，合并后再删掉，比起直接在master上工作过程更安全。")]),t._v("\n")])])]),a("h3",{attrs:{id:"_2-远程分支"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-远程分支"}},[t._v("#")]),t._v(" 2.远程分支")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("git push origin "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" Chapater6\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 删除远程分支")]),t._v("\n\ngit branch "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("r\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 查看远程分支")]),t._v("\n\ngit checkout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("b\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 拉取远程分支并创建本地分支")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 本地分支名x origin/远程分支名x")]),t._v("\n\ngit checkout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("b test\ngit push origin test\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这样远程仓库中也就创建了一个test分支")]),t._v("\n\ngit branch "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("a\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 查看所有分支")]),t._v("\n\ngit checkout "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" git clean "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("xdf\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 清楚所有更改")]),t._v("\n\ngit checkout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" file\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 清除某一个文件的更改")]),t._v("\n")])])]),a("h2",{attrs:{id:"二-git-删除，撤销操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二-git-删除，撤销操作"}},[t._v("#")]),t._v(" 二 git 删除，撤销操作")]),t._v(" "),a("h3",{attrs:{id:"_1-删除"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-删除"}},[t._v("#")]),t._v(" 1.删除")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("$ rm file"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("js\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 删除file.js")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);